#include <iostream>

// Function to calculate the sum of divisors of a number
int sumOfDivisors(int num) {
    int divisorsSum = 1;  // Start with 1 to include 1 as a divisor
    for (int i = 2; i <= num / 2; ++i) {
        if (num % i == 0) {
            divisorsSum += i;
        }
    }
    return divisorsSum;
}

int main() {
    int num1, num2;

    // Input
    std::cin >> num1 >> num2;

    // Calculate the sum of divisors for both numbers
    int sum1 = sumOfDivisors(num1);
    int sum2 = sumOfDivisors(num2);

    // Check if they form a Friendly Pair
    if (static_cast<double>(sum1) / num1 == static_cast<double>(sum2) / num2 && 
        static_cast<double>(sum1) / num1 ==  static_cast<double>(sum2) / num2) {
        std::cout << "Friendly Pair" << std::endl;
    } else {
        std::cout << "Not Friendly Pair" << std::endl;
    }

    return 0;
}
